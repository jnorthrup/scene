<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hideftvads</groupId>
    <artifactId>scene</artifactId>
    <packaging>jar</packaging>
    <version>0.0.4</version>
    <name>scene</name>
    <url>http://maven.apache.org</url>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <fork>true</fork>
                    <meminitial>128m</meminitial>
                    <maxmem>1024m</maxmem>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorId>
                        jar-with-dependencies
                    </descriptorId>
                    <archive>
                        <manifest>
                            <mainClass>scene.SceneLayoutApp</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo.webstart</groupId>
                <artifactId>webstart-maven-plugin</artifactId>
                <version>testing</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jnlp</goal>
                            <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--outputDirectory></outputDirectory--> <!-- not required?? -->

                    <!--
                    Set to true to exclude all transitive dependencies. Default is false.
                    -->
                    <excludeTransitive>false</excludeTransitive>

                    <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
                    <libPath>lib</libPath>

                    <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
                    <dependencies>
                        <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
                        <includes>
                            <include>commons-logging:commons-logging</include>
                            <include>commons-cli:commons-cli</include>
                        </includes>
                        <!-- excludes>
                           <exclude></exclude>
                        <excludes-->
                    </dependencies>

                    <!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory--> <!-- default value -->

                    <!-- JNLP generation -->
                    <jnlp>
                        <!-- default values -->
                        <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
                        <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
                        <outputFile>app.jnlp</outputFile>
                        <!-- defaults to launch.jnlp -->

                        <!-- used to automatically identify the jar containing the main class. -->
                        <!-- this is perhaps going to change -->
                        <mainClass>org.apache.commons.cli.BasicParser</mainClass>
                    </jnlp>


                    <!-- SIGNING -->
                    <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
                    <sign>
                        <keystore>copyright2009hideftvads.com</keystore>
                        <keypass>copyright2009hideftvads.com</keypass>
                        <!-- we need to override passwords easily from the command line. ${keypass} -->
                        <storepass>copyright2009hideftvads.com</storepass>
                        <!-- ${storepass} -->
                        <!--storetype>copyright2009hideftvads.com</storetype-->
                        <alias>copyright2009hideftvads.com</alias>

                        <!--validity>copyright2009hideftvads.com</validity-->

                        <!-- only required for generating the keystore -->
                        <dnameCn>copyright2009hideftvads.com</dnameCn>
                        <dnameOu>copyright2009hideftvads.com</dnameOu>
                        <dnameO>copyright2009hideftvads.com</dnameO>
                        <dnameL>copyright2009hideftvads.com</dnameL>
                        <dnameSt>copyright2009hideftvads.com</dnameSt>
                        <dnameC>copyright2009hideftvads.com</dnameC>

                        <verify>true</verify>
                        <!-- verify that the signing operation succeeded -->

                        <!-- KEYSTORE MANAGEMENT -->
                        <keystoreConfig>
                            <delete>true</delete>
                            <!-- delete the keystore -->
                            <gen>true</gen>
                            <!-- optional shortcut to generate the store. -->
                        </keystoreConfig>
                    </sign>

                    <!-- BUILDING PROCESS -->

                    <pack200>true</pack200>
                    <gzip>true</gzip>
                    <!-- default force when pack200 false, true when pack200 selected ?? -->

                    <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
                    <outputJarVersions>true</outputJarVersions>

                    <!--install>false</install--> <!-- not yet supported -->
                    <verbose>true</verbose>

                </configuration>
            </plugin>
            <plugin>
                <groupId>com.pyx4me</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jsse.jar</lib>
                    </libs>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <dependencies>
        <!--<dependency>-->
            <!--<groupId>com.sun</groupId>-->
            <!--<artifactId>tools</artifactId>-->
            <!--<version>1.4.2</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${basedir}/repo/com/sun/tools/1.4.2/tools-1.4.2.jar</systemPath>-->
            <!--<systemPath>${java.home}/../lib/tools.jar</systemPath>-->
        <!--</dependency>-->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.4</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.3</version>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>quickndirty</id>
            <name>repo</name>
            <url>
                file://${basedir}/repo/
            </url>
            <layout>default</layout>
        </repository>
    </repositories>


</project>
